---
name: Магические числа
theory: |
  Вспомним один из прошлых уроков:

  ```cpp
  // Перевод евро в рубли через доллары
  int main() {
    int euros { 1000 };
    auto dollars { euros * 1.25 }; // 1250
    auto rubles { dollars * 60 }; // 75000

    std::cout << rubles << std::endl; // => 75000
  }
  ```

  С точки зрения профессиональной разработки, такой код «пахнет». Так описывают код, который не соответствует так называемым лучшим практикам (best practices). И причина здесь вот в чем: уже сейчас, глядя на числа *60* и *1.25*, вы скорее всего задаетесь вопросом: «что это за числа?». А представьте, что будет через месяц! А как его поймет новый программист, не видевший код ранее? В нашем примере контекст восстанавливается благодаря грамотному именованию, но в реальной жизни код значительно сложнее, и поэтому догадаться до смысла чисел зачастую невозможно.

  Этот «запах» называют магические числа (magic numbers). Числа, происхождение которых невозможно понять без глубокого знания происходящего внутри данного участка кода.

  Выход из ситуации прост: достаточно создать переменные с правильными именами, как все встанет на свои места.

  ```cpp
  int main() {
    auto dollars_in_euro { 1.25 };
    int rubles_in_dollar { 60 };

    int euros { 1000 };
    auto dollars { euros * dollars_in_euro }; // 1250
    auto rubles  { dollars * rubles_in_dollar }; // 75000

    std::cout << rubles << std::endl; // => 75000
  }
  ```

  Обратите внимание на следующие детали:

  * Именование *snake_case*
  * Две новые переменные отделены от последующих вычислений пустой строчкой. Эти переменные имеют смысл и без вычислений, поэтому такое отделение уместно, оно повышает читаемость.
  * Получился хорошо именованный и структурированный код, но он длиннее прошлой версии. Так часто бывает, и это нормально, потому что код должен быть читабельным.

instructions: |
  Вы столкнулись с таким кодом, который выводит на экран среднесуточную температуру в Фаренгейтах:

  ```cpp
  std::cout << "Average daily temperature: " << 588 / 24;
  ```

  Как видите, это магические числа: непонятно, что такое _588_ и что такое _24_.

  Избавьтесь от магических чисел, создав новые переменные, а затем выведите текст на экран.

  Получится так:
  <pre class='hexlet-basics-output'>
  Average daily temperature: 24
  </pre>

  Названия переменных должны передавать смысл чисел, но должны при этом оставаться достаточно короткими и ёмкими для комфортного чтения.

  Помните: код будет работать с любыми названиями, а наша система всегда проверяет только результат на экране, поэтому выполнение этого задания — под вашу ответственность.

  В С++ при делении если оба оператора являются целыми числами, то результат будет равен целой доли частного. Незабудьте в конце вывода добавить перевод строки.

tips:
  - |
    [Магические числа](https://ru.hexlet.io/blog/posts/magic-numbers)
